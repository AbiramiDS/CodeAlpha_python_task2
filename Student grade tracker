class Student:
    def __init__(self, name):
        self.name = name
        self.grades = {}

    def add_grade(self, subject, grade):
        if subject in self.grades:
            self.grades[subject].append(grade)
        else:
            self.grades[subject] = [grade]

    def calculate_average(self):
        total_grades = sum(sum(grades) for grades in self.grades.values())
        total_subjects = sum(len(grades) for grades in self.grades.values())
        return total_grades / total_subjects if total_subjects > 0 else 0

def main():
    students = {}

    while True:
        print("\n1. Add a student")
        print("2. Add a grade")
        print("3. Calculate average")
        print("4. Exit")

        choice = input("Enter your choice: ")

        if choice == '1':
            name = input("Enter the student's name: ")
            if name in students:
                print(f"{name} is already in the system.")
            else:
                students[name] = Student(name)
                print(f"Student {name} added.")
        
        elif choice == '2':
            name = input("Enter the student's name: ")
            if name not in students:
                print(f"Student {name} not found.")
            else:
                subject = input("Enter the subject: ")
                try:
                    grade = float(input("Enter the grade: "))
                    students[name].add_grade(subject, grade)
                    print(f"Grade {grade} added for {subject}.")
                except ValueError:
                    print("Invalid grade. Please enter a number.")
        
        elif choice == '3':
            name = input("Enter the student's name: ")
            if name not in students:
                print(f"Student {name} not found.")
            else:
                average = students[name].calculate_average()
                print(f"{name}'s average grade is {average:.2f}")

        elif choice == '4':
            break

        else:
            print("Invalid choice. Please try again.")

if __name__ == "__main__":
    main()
